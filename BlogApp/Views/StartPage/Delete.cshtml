@model BlogApp.Entity.Post

@{
    ViewData["Title"] = "Delete Post";
}

<h1>Delete Post</h1>

<h3>Are you sure you want to delete this post?</h3>
<div>
    <h4>@Model.Title</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            Description
        </dt>
        <dd class = "col-sm-10">
            @Model.Description
        </dd>
        <dt class = "col-sm-2">
            Content
        </dt>
        <dd class = "col-sm-10">
            @Model.Content
        </dd>
    </dl>
    
    <form asp-action="DeleteConfirmed" method="post">
        <input type="hidden" asp-for="PostId" />
        <button type="submit" class="buttonAll btn btn-danger">Delete</button>
        <a asp-action="List" class="buttonAll btn btn-secondary">Cancel</a>
    </form>
</div>

<script>
function deleteComment(commentId) {
    if (!confirm('Are you sure you want to delete this comment?')) {
        return;
    }
    
    console.log('/StartPage/Delete?commentId=${commentId}')

    fetch(`/StartPage/DeleteComment?commentId=${commentId}`, {
        method: 'DeletComment',
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        }
    })
    .then(response => {
        console.log(`Response status: ${response.status}`);
        if (!response.ok) {
            throw new Error('Network response was not ok.');
        }
        return response.json();
    })
    .then(data => {
        console.log('Response data:', data);
        if (data.success) {
            alert('Comment deleted');
            // Optionally, remove the comment from the UI
            document.getElementById(`comment-${commentId}`).remove();
        } else {
            alert('Error deleting comment');
        }
    })
    .catch(error => {
        console.error('Error deleting comment:', error);
    });
}
</script>

